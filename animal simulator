if game.PlaceId == 11696357981 then 

getgenv().SecureMode = true

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Rayfield Example Window",
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by Sirius",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },
})

local Tab1 = Window:CreateTab("Auto farm", 4483362458) -- Title, Image
local Tab2 = Window:CreateTab("Upgrade", 4483362458)
local Tab3 = Window:CreateTab("Teleport", 4483362458)

local Section = Tab1:CreateSection("farm")

local Toggle = Tab1:CreateToggle({
   Name = "Auto Power",
   CurrentValue = false,
   Flag = "Toggle2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(bool)
   getgenv().Pw = bool
   if bool then
    doPw();
    end
   end,
})

local Toggle = Tab1:CreateToggle({
   Name = "Auto Speed",
   CurrentValue = false,
   Flag = "Toggle7", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(bool)
   getgenv().Sp = bool
   if bool then
    doSp();
    end
   end,
})


local Toggle = Tab1:CreateToggle({
   Name = "Auto Defense",
   CurrentValue = false,
   Flag = "Toggle3", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(bool)
   getgenv().Df = bool
   if bool then
    doDf();
    end
   end,
})

local Section = Tab1:CreateSection("Quest")

local Toggle = Tab1:CreateToggle({
   Name = "Chakra quest",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(bool)
   getgenv().Qt = bool
   if bool then
    doQt();
    end
   end,
})

local Toggle = Tab1:CreateToggle({
   Name = "Stan Lee quest",
   CurrentValue = false,
   Flag = "Toggle9", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(bool)
   getgenv().Ql = bool
   if bool then
    doQl();
    end
   end,
})

local Toggle = Tab1:CreateToggle({
   Name = "Boss Yama quest",
   CurrentValue = false,
   Flag = "Toggle00", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(bool)
   getgenv().Qy = bool
   if bool then
    doQy();
    end
   end,
})



local Section = Tab1:CreateSection("Misc")

local Button = Tab1:CreateButton({
   Name = "Remove dialog",
   Callback = function()
  game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Dialogue.Visible = false
   end,
})

local Button = Tab1:CreateButton({
   Name = "Enable dialog",
   Callback = function()
  game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Dialogue.Visible = true
   end,
})

--------------------------------------------------
local Section = Tab2:CreateSection("Auto upgrade")

local Toggle = Tab2:CreateToggle({
   Name = "Upgrade Power",
   CurrentValue = false,
   Flag = "Toggle6", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(bool)
   getgenv().UP = bool
   if bool then
    doUP();
    end
   end,
})

local Toggle = Tab2:CreateToggle({
   Name = "Upgrade Speed",
   CurrentValue = false,
   Flag = "Toggle5", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(bool)
   getgenv().US = bool
   if bool then
    doUS();
    end
   end,
})


local Toggle = Tab2:CreateToggle({
   Name = "Upgrade Defense",
   CurrentValue = false,
   Flag = "Toggle4", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(bool)
   getgenv().UD = bool
   if bool then
    doUD();
    end
   end,
})
-------------
local Section = Tab3:CreateSection("Teleport")

local Button = Tab3:CreateButton({
   Name = "Defense area",
   Callback = function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(511, 126, -861)
   end,
})

local Button = Tab3:CreateButton({
   Name = "Power area",
   Callback = function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(12, 8, 464)
   end,
})

local Button = Tab3:CreateButton({
   Name = "Speed area",
   Callback = function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(858, 15, -2452)
   end,
})
--9
--99
--999
--9999
--99999
--999999
--9999999
--99999999
--999999999
--9999999999
--99999999999
--999999999999
function doDf()
 spawn(function()
   while getgenv().Df == true do
   local args = {
    [1] = "Defense"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Training"):FireServer(unpack(args))

    wait()
   end
  end)
end

function doSp()
 spawn(function()
   while getgenv().Sp == true do
   
local args = {
    [1] = "Agility"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Training"):FireServer(unpack(args))

    wait()
   end
  end)
end

function doPw()
 spawn(function()
   while getgenv().Pw == true do
   local args = {
    [1] = "Strength"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Training"):FireServer(unpack(args))

    wait()
   end
  end)
end
--------------------------------
function doQt()
 spawn(function()
   while getgenv().Qt == true do
  local args = {
    [1] = "Chakra"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("QuestGiverInteract"):FireServer(unpack(args))
    wait()
   end
  end)
end


function doQl()
 spawn(function()
   while getgenv().Ql == true do
local args = {
    [1] = "Stan Lee"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("QuestGiverInteract"):FireServer(unpack(args))
loadstring(game:HttpGet("https://raw.githubusercontent.com/emanuelgpe1/menu/main/stanlee%20quest"))() 	
wait()
   end
  end)
end

function doQy()
 spawn(function()
   while getgenv().Qy == true do
local args = {
    [1] = "Boss Yama"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("QuestGiverInteract"):FireServer(unpack(args))

    wait()
   end
  end)
end
-------------------------------------

function doUS()
 spawn(function()
   while getgenv().US == true do
  local args = {
    [1] = "Agility"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("UpgradeMultiplier"):FireServer(unpack(args))
 
    wait()
   end
  end)
end

function doUD()
 spawn(function()
   while getgenv().UD == true do
local args = {
    [1] = "Defense"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("UpgradeMultiplier"):FireServer(unpack(args))

    wait()
   end
  end)
end

function doUP()
 spawn(function()
   while getgenv().UP == true do
local args = {
    [1] = "Strength"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("UpgradeMultiplier"):FireServer(unpack(args))

wait()
   end
  end)
end

end
